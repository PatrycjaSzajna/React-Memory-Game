{"ast":null,"code":"var _jsxFileName = \"/home/patrycja/Desktop/memory-kopia/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport Card from './Card'; // Obrazki kart\n\nimport img1 from '../images/card1.jpg';\nimport img2 from '../images/card2.jpg';\nimport img3 from '../images/card3.jpg';\nimport img4 from '../images/card4.jpg';\nimport img5 from '../images/card5.jpg';\nimport img6 from '../images/card6.jpg';\nimport img7 from '../images/card7.jpg';\nimport img8 from '../images/card8.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Game = props => {\n  _s();\n\n  const {\n    user\n  } = props.data;\n  const history = useHistory(); // Lokalny state\n\n  const [intervalId, setIntervalId] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameFinished, setGameFinished] = useState(false);\n  const [seconds, setSeconds] = useState(0);\n  const [cards, setCards] = useState([]);\n  const [pick1, setPick1] = useState({});\n  const [pick2, setPick2] = useState({});\n  const [pairs, setPairs] = useState(0);\n  const [error, setError] = useState(''); // Przekieruj użytkownika jeżeli nie podał nazwy gracza\n\n  useEffect(() => {\n    !user && history.push('/');\n  }, []); // Tasowanie kart przed rozpoczęciem gry\n\n  useEffect(() => {\n    const deck = [{\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'A',\n      value: 1,\n      img: img1,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'B',\n      value: 1,\n      img: img1,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'C',\n      value: 2,\n      img: img2,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'D',\n      value: 2,\n      img: img2,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'E',\n      value: 3,\n      img: img3,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'F',\n      value: 3,\n      img: img3,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'G',\n      value: 4,\n      img: img4,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'H',\n      value: 4,\n      img: img4,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'I',\n      value: 5,\n      img: img5,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'J',\n      value: 5,\n      img: img5,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'K',\n      value: 6,\n      img: img6,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'L',\n      value: 6,\n      img: img6,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'M',\n      value: 7,\n      img: img7,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'N',\n      value: 7,\n      img: img7,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'O',\n      value: 8,\n      img: img8,\n      blocked: false,\n      active: false\n    }, {\n      id: uuidv4(),\n      sort: Math.random() * 100,\n      name: 'P',\n      value: 8,\n      img: img8,\n      blocked: false,\n      active: false\n    }];\n    deck.sort((a, b) => {\n      return parseFloat(a.sort) - parseFloat(b.sort);\n    });\n    setCards(deck);\n  }, []); // Start timera po rozpoczęciu gry\n\n  useEffect(() => {\n    if (gameStarted) {\n      const iid = setInterval(() => {\n        setSeconds(prev => prev + 1);\n      }, 1000);\n      setIntervalId(iid);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [gameStarted]); // Wybór kart\n\n  const pickCard = async (id, value) => {\n    // Wybór pierwszej karty\n    if (Object.keys(pick1).length === 0) {\n      setPick1({\n        id,\n        value\n      });\n      const newCards = cards;\n      newCards.forEach(card => {\n        if (card.id == id) {\n          card.active = true;\n          card.blocked = true;\n        }\n      });\n      setCards(newCards);\n    } // Wybór drugiej karty\n    else {\n        setPick2({\n          id,\n          value\n        });\n        const newCards = cards;\n        newCards.forEach(card => {\n          if (card.id == id) {\n            card.active = true;\n            card.blocked = true;\n          } // Po wyboże drugiej karty zablokuj pozostałe\n\n\n          card.blocked = true;\n        });\n        setCards(newCards);\n      }\n  }; // Porónanie kart\n\n\n  useEffect(() => {\n    if (Object.keys(pick2).length !== 0 && pick1.value && pick2.value) {\n      // Jeżeli karty do siebie pasują (value)\n      if (pick1.value === pick2.value) {\n        const newCards = cards;\n        newCards.forEach(card => {\n          if (card.active !== true) {\n            card.blocked = false;\n          }\n        });\n        setCards(newCards);\n        setPairs(prev => prev + 1);\n        setPick1({});\n        setPick2({});\n      } // Jeżeli karty do siebie nie pasują (value)\n      else {\n          setTimeout(() => {\n            const newCards = cards;\n            newCards.forEach(card => {\n              if (card.active === true && (card.id === pick1.id || card.id === pick2.id)) {\n                card.active = false;\n                card.blocked = false;\n              } else {\n                card.blocked = false;\n              }\n            });\n            setPick1({});\n            setPick2({});\n          }, 2000);\n        }\n    }\n  }, [pick2.value]); // Reset gry\n\n  const handleReset = () => {\n    clearInterval(intervalId);\n    setGameStarted(false);\n    setGameFinished(false);\n    setSeconds(0);\n    setPick1({});\n    setPick2({});\n    setPairs(0);\n    const newCards = [...cards];\n    newCards.forEach(card => {\n      card.sort = Math.random() * 100;\n      card.active = false;\n      card.blocked = false;\n    });\n    newCards.sort((a, b) => {\n      return parseFloat(a.sort) - parseFloat(b.sort);\n    });\n    setCards(newCards);\n  }; // Zakończenie gry i zapisanie wyniku\n\n\n  useEffect(() => {\n    if (pairs === 8) {\n      clearInterval(intervalId);\n      setGameFinished(true); // Zapisanie danych do bazy danych\n\n      const data = {\n        name: user,\n        time: seconds\n      };\n      fetch('http://localhost:5000/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        if (data.name) {} else {\n          throw Error;\n        }\n      }).catch(err => {\n        setError('Błąd bazy danych - wynik nie został zapisany.');\n      });\n    }\n  }, [pairs]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [user && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container game-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"game-data-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"player\",\n                    children: \"Gracz\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"player\",\n                    children: user\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"reset\",\n                  children: gameStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleReset(),\n                    className: \"btn btn-primary\",\n                    children: \"Restart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"time\",\n                    children: \"Czas\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"time\",\n                    children: seconds\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 text-center\",\n              style: {\n                position: 'relative'\n              },\n              children: [gameStarted && !gameFinished && cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n                card: card,\n                pickCard: pickCard\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 23\n              }, this)), (!gameStarted || gameFinished) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-box\",\n                children: [!gameStarted && !gameFinished && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      marginBottom: '20px'\n                    },\n                    children: \"Jeste\\u015B gotowy?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setGameStarted(true),\n                    className: \"btn btn-primary\",\n                    children: \"Rozpocznij\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 25\n                }, this), gameFinished && gameFinished && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    style: {\n                      marginBottom: '20px'\n                    },\n                    children: \"KONIEC GRY\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"myscore\",\n                    children: \"TW\\xD3J WYNIK\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: seconds\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/scores\",\n                    className: \"btn btn-primary\",\n                    children: \"Zobacz wyniki\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 27\n                  }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-danger mt-2\",\n                    children: error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), !user && null]\n  }, void 0, true);\n};\n\n_s(Game, \"nHJc5RJfahhIAaDOHWQFWehO6PE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/patrycja/Desktop/memory-kopia/src/components/Game.js"],"names":["useEffect","useState","useHistory","Link","v4","uuidv4","Card","img1","img2","img3","img4","img5","img6","img7","img8","Game","props","user","data","history","intervalId","setIntervalId","gameStarted","setGameStarted","gameFinished","setGameFinished","seconds","setSeconds","cards","setCards","pick1","setPick1","pick2","setPick2","pairs","setPairs","error","setError","push","deck","id","sort","Math","random","name","value","img","blocked","active","a","b","parseFloat","iid","setInterval","prev","clearInterval","pickCard","Object","keys","length","newCards","forEach","card","setTimeout","handleReset","time","fetch","method","headers","body","JSON","stringify","then","response","json","Error","catch","err","position","map","marginBottom"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Card from './Card';\r\n\r\n// Obrazki kart\r\nimport img1 from '../images/card1.jpg';\r\nimport img2 from '../images/card2.jpg';\r\nimport img3 from '../images/card3.jpg';\r\nimport img4 from '../images/card4.jpg';\r\nimport img5 from '../images/card5.jpg';\r\nimport img6 from '../images/card6.jpg';\r\nimport img7 from '../images/card7.jpg';\r\nimport img8 from '../images/card8.jpg';\r\n\r\nconst Game = (props) => {\r\n  const { user } = props.data;\r\n  const history = useHistory();\r\n\r\n  // Lokalny state\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [gameFinished, setGameFinished] = useState(false);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [cards, setCards] = useState([]);\r\n  const [pick1, setPick1] = useState({});\r\n  const [pick2, setPick2] = useState({});\r\n  const [pairs, setPairs] = useState(0);\r\n  const [error, setError] = useState('');\r\n\r\n  // Przekieruj użytkownika jeżeli nie podał nazwy gracza\r\n  useEffect(() => {\r\n    !user && history.push('/');\r\n  }, []);\r\n\r\n  // Tasowanie kart przed rozpoczęciem gry\r\n  useEffect(() => {\r\n    const deck = [\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'A',\r\n        value: 1,\r\n        img: img1,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'B',\r\n        value: 1,\r\n        img: img1,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'C',\r\n        value: 2,\r\n        img: img2,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'D',\r\n        value: 2,\r\n        img: img2,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'E',\r\n        value: 3,\r\n        img: img3,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'F',\r\n        value: 3,\r\n        img: img3,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'G',\r\n        value: 4,\r\n        img: img4,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'H',\r\n        value: 4,\r\n        img: img4,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'I',\r\n        value: 5,\r\n        img: img5,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'J',\r\n        value: 5,\r\n        img: img5,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'K',\r\n        value: 6,\r\n        img: img6,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'L',\r\n        value: 6,\r\n        img: img6,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'M',\r\n        value: 7,\r\n        img: img7,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'N',\r\n        value: 7,\r\n        img: img7,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'O',\r\n        value: 8,\r\n        img: img8,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        sort: Math.random() * 100,\r\n        name: 'P',\r\n        value: 8,\r\n        img: img8,\r\n        blocked: false,\r\n        active: false,\r\n      },\r\n    ];\r\n\r\n    deck.sort((a, b) => {\r\n      return parseFloat(a.sort) - parseFloat(b.sort);\r\n    });\r\n\r\n    setCards(deck);\r\n  }, []);\r\n\r\n  // Start timera po rozpoczęciu gry\r\n  useEffect(() => {\r\n    if (gameStarted) {\r\n      const iid = setInterval(() => {\r\n        setSeconds((prev) => prev + 1);\r\n      }, 1000);\r\n      setIntervalId(iid);\r\n    }\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [gameStarted]);\r\n\r\n  // Wybór kart\r\n  const pickCard = async (id, value) => {\r\n    // Wybór pierwszej karty\r\n    if (Object.keys(pick1).length === 0) {\r\n      setPick1({ id, value });\r\n      const newCards = cards;\r\n      newCards.forEach((card) => {\r\n        if (card.id == id) {\r\n          card.active = true;\r\n          card.blocked = true;\r\n        }\r\n      });\r\n      setCards(newCards);\r\n    }\r\n\r\n    // Wybór drugiej karty\r\n    else {\r\n      setPick2({ id, value });\r\n      const newCards = cards;\r\n      newCards.forEach((card) => {\r\n        if (card.id == id) {\r\n          card.active = true;\r\n          card.blocked = true;\r\n        }\r\n        // Po wyboże drugiej karty zablokuj pozostałe\r\n        card.blocked = true;\r\n      });\r\n      setCards(newCards);\r\n    }\r\n  };\r\n\r\n  // Porónanie kart\r\n  useEffect(() => {\r\n    if (Object.keys(pick2).length !== 0 && pick1.value && pick2.value) {\r\n      // Jeżeli karty do siebie pasują (value)\r\n      if (pick1.value === pick2.value) {\r\n        const newCards = cards;\r\n        newCards.forEach((card) => {\r\n          if (card.active !== true) {\r\n            card.blocked = false;\r\n          }\r\n        });\r\n        setCards(newCards);\r\n        setPairs((prev) => prev + 1);\r\n        setPick1({});\r\n        setPick2({});\r\n      }\r\n\r\n      // Jeżeli karty do siebie nie pasują (value)\r\n      else {\r\n        setTimeout(() => {\r\n          const newCards = cards;\r\n          newCards.forEach((card) => {\r\n            if (\r\n              card.active === true &&\r\n              (card.id === pick1.id || card.id === pick2.id)\r\n            ) {\r\n              card.active = false;\r\n              card.blocked = false;\r\n            } else {\r\n              card.blocked = false;\r\n            }\r\n          });\r\n          setPick1({});\r\n          setPick2({});\r\n        }, 2000);\r\n      }\r\n    }\r\n  }, [pick2.value]);\r\n\r\n  // Reset gry\r\n  const handleReset = () => {\r\n    clearInterval(intervalId);\r\n    setGameStarted(false);\r\n    setGameFinished(false);\r\n    setSeconds(0);\r\n    setPick1({});\r\n    setPick2({});\r\n    setPairs(0);\r\n\r\n    const newCards = [...cards];\r\n    newCards.forEach((card) => {\r\n      card.sort = Math.random() * 100;\r\n      card.active = false;\r\n      card.blocked = false;\r\n    });\r\n\r\n    newCards.sort((a, b) => {\r\n      return parseFloat(a.sort) - parseFloat(b.sort);\r\n    });\r\n\r\n    setCards(newCards);\r\n  };\r\n\r\n  // Zakończenie gry i zapisanie wyniku\r\n  useEffect(() => {\r\n    if (pairs === 8) {\r\n      clearInterval(intervalId);\r\n      setGameFinished(true);\r\n\r\n      // Zapisanie danych do bazy danych\r\n      const data = { name: user, time: seconds };\r\n\r\n      fetch('http://localhost:5000/users', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.name) {\r\n          } else {\r\n            throw Error;\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setError('Błąd bazy danych - wynik nie został zapisany.');\r\n        });\r\n    }\r\n  }, [pairs]);\r\n\r\n  return (\r\n    <>\r\n      {user && (\r\n        <>\r\n          <div className='container game-container'>\r\n            <div className='game-wrapper'>\r\n              <div className='row'>\r\n                <div className='col-12'>\r\n                  <div className='game-data-wrapper'>\r\n                    <div className='player'>\r\n                      <p className='player'>Gracz</p>\r\n                      <h4 className='player'>{user}</h4>\r\n                    </div>\r\n                    <div className='reset'>\r\n                      {gameStarted && (\r\n                        <button\r\n                          onClick={() => handleReset()}\r\n                          className='btn btn-primary'\r\n                        >\r\n                          Restart\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                    <div className='time'>\r\n                      <p className='time'>Czas</p>\r\n                      <h4 className='time'>{seconds}</h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className='col-12 text-center'\r\n                  style={{ position: 'relative' }}\r\n                >\r\n                  {gameStarted &&\r\n                    !gameFinished &&\r\n                    cards.map((card) => (\r\n                      <Card key={card.id} card={card} pickCard={pickCard} />\r\n                    ))}\r\n\r\n                  {(!gameStarted || gameFinished) && (\r\n                    <div className='info-box'>\r\n                      {!gameStarted && !gameFinished && (\r\n                        <div className='info-content'>\r\n                          <h4 style={{ marginBottom: '20px' }}>\r\n                            Jesteś gotowy?\r\n                          </h4>\r\n                          <button\r\n                            onClick={() => setGameStarted(true)}\r\n                            className='btn btn-primary'\r\n                          >\r\n                            Rozpocznij\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                      {gameFinished && gameFinished && (\r\n                        <div className='info-content'>\r\n                          <h5 style={{ marginBottom: '20px' }}>KONIEC GRY</h5>\r\n                          <p className='myscore'>TWÓJ WYNIK</p>\r\n                          <h1>{seconds}</h1>\r\n                          <Link to='/scores' className='btn btn-primary'>\r\n                            Zobacz wyniki\r\n                          </Link>\r\n                          {error && (\r\n                            <div className='alert alert-danger mt-2'>\r\n                              {error}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      {!user && null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}